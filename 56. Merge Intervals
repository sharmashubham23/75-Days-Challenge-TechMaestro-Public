//Question link: https://leetcode.com/problems/merge-intervals/

class Solution {
    public int[][] merge(int[][] intervals) {
    Arrays.sort(intervals,(a,b) ->Integer.compare(a[0],b[0]));
    LinkedList<int[]> ans = new LinkedList<>();
    
    for(int[] tem:intervals){
        if(ans.isEmpty() || ans.getLast()[1]<tem[0])
            ans.add(tem);
        else if(ans.getLast()[1]>=tem[0])
            ans.getLast()[1] = Math.max(ans.getLast()[1],tem[1]);
    }
    return ans.toArray(new int[ans.size()][]);
}

}

//Runtime: 12 ms, faster than 65.42% of Java online submissions for Merge Intervals.
//Memory Usage: 55.4 MB, less than 40.31% of Java online submissions for Merge Intervals.
